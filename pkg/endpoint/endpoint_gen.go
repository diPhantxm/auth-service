// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "auth/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	AuthEndpoint           endpoint.Endpoint
	ChangePasswordEndpoint endpoint.Endpoint
	SignUpEndpoint         endpoint.Endpoint
	DeleteEndpoint         endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.AuthService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		AuthEndpoint:           MakeAuthEndpoint(s),
		ChangePasswordEndpoint: MakeChangePasswordEndpoint(s),
		DeleteEndpoint:         MakeDeleteEndpoint(s),
		SignUpEndpoint:         MakeSignUpEndpoint(s),
	}
	for _, m := range mdw["Auth"] {
		eps.AuthEndpoint = m(eps.AuthEndpoint)
	}
	for _, m := range mdw["ChangePassword"] {
		eps.ChangePasswordEndpoint = m(eps.ChangePasswordEndpoint)
	}
	for _, m := range mdw["SignUp"] {
		eps.SignUpEndpoint = m(eps.SignUpEndpoint)
	}
	for _, m := range mdw["Delete"] {
		eps.DeleteEndpoint = m(eps.DeleteEndpoint)
	}
	return eps
}
